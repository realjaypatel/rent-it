<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Responsive Blog</title>
  <link rel="stylesheet" href="/public/assets/css/style.css">
 
</head>

<body>
  <%- include('includes/header',{data:user}) %>




  <!-- ---------------------------------- -->
  <div class="mt-[90px]">
    <div class=" p-10">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div>
          <div>
         
            <section class="section about" aria-label="about">
              <div class="container">
          
                <div class="about-banner img-holder" style="--width: 500; --height: 500;">
                  <% if (user.avatar) { %>
                    <img src="/uploads/<%=user.avatar%>" width="600" height="700" loading="lazy" alt="about banner" class="img-cover">
                  <% } else { %>
                    <img src="/uploads/profile.png" width="600" height="700" loading="lazy" alt="about banner" class="img-cover">
                  <% } %>
                
          
          
                </div>
          
                <div class="about-content">
          
                  <h2 class="h2 section-title">User Details: <%=user.username%></h2>
          
                  <p class="section-text">
                      Username: <%=user.username%> <br />
                      email:<%=user.email%>
          
                  </p>
                  
        
          
                </div>
          
              </div>
            </section>
            <section>
          


            </section>
    
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 houselist"></div>
          </div>
        </div>
        <div class="fixed right-10 h-full  md:w-[350px] lg:w-[450px] xl:w-[650px] map-outer">
          <div>
            <div style="width: 100%; height: 80vh; border-radius: 10px; position: relative; overflow: hidden;">

              <div id="map"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>



</body>

</html>
























<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

  <style>
    /* Style the map container */
    #map {
      height: 100%;
      width: 100%;
      z-index: 0;
    }
    .mapclass{
      max-width: 2200px;

    }
    .about-content{
      overflow: auto;
    max-height: 100vh;
    height: 100%;
    }
    .li{
      margin: 35px;
    }
    
.popupContainer {
    display: flex;
    gap: 20px;
}
.popupContainer img {
    width: 64px;
    height: 48px;
    object-fit: cover;
    border-radius: 5px;
}
.popupContainer .textContainer {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

  </style>


  <section class="section about" aria-label="about">
    <div class="container mapclass">

      <div class="about-banner img-holder" style="--width: 600; --height: 700;">
    
      </div>

      <div class="about-content">

        <ul class="list">
 

        </ul>

      </div>

    </div>
  </section>

  <script>

const myMap = L.map('map').setView([22.9074872, 79.07306671], 5);
const tileUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
const attribution =
        'Coded by jay patel';
const tileLayer = L.tileLayer(tileUrl, { attribution });
tileLayer.addTo(myMap);

    storeList = []
    const storeData = <%- JSON.stringify(posts)%>

for (var i = 0; i < storeData.length; i++) {
  let img = storeData[i].images[0]
   
   if(img==undefined){
     img = 'default.jpg'
   }
   obj = {
       "type": "Feature",
       "geometry": {
         "type": "Point",
         "coordinates": [storeData[i].longitude, storeData[i].latitude]
       },
       "properties": {
         "name": storeData[i].title,
         "address": storeData[i].address,
         "price": storeData[i].price,
         "bedroom":storeData[i].bedroom,
         "bathroom":storeData[i].bathroom,
         "size":storeData[i].size,
         "id":storeData[i].id,
         "img":img
       }
     }


  storeList.push(obj);
}
console.log(storeList)
function generateList() {
  const ul = document.querySelector('.houselist');
  storeList.forEach((shop) => {
    const li = document.createElement('li');
    const div = document.createElement('div');
    const a = document.createElement('a');
    const p = document.createElement('p');
    a.addEventListener('click', () => {
        flyToStore(shop);
    });
 
var liToAdd = `
    <a>
                <div class="p-3 hover:border hover:border-primary rounded-lg cursor-pointer"><img loading="lazy"
                    width="800" height="150" decoding="async" data-nimg="1" class="rounded-lg object-cover h-[170px]"
                    src="/uploads/${shop.properties.img}"
                    style="color: transparent;">
                  <div class="flex mt-2 flex-col gap-2">
                    
                    <h2 class="font-bold text-xl">
                      <a href="/place/${shop.properties.id}">${shop.properties.name}</a>
                      </h2>
                    <h2 class="flex gap-2 text-sm text-gray-400 "><svg xmlns="http://www.w3.org/2000/svg" width="24"
                        height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                        stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin h-4 w-4">
                        <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path>
                        <circle cx="12" cy="10" r="3"></circle>
                      </svg>${shop.properties.address}</h2>
                      <h2 class="flex gap-2 text-sm text-gray-400 "><svg xmlns="http://www.w3.org/2000/svg" width="24"
                        height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                        stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin h-4 w-4">
                        <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path>
                        <circle cx="12" cy="10" r="3"></circle>
                      </svg>$${shop.properties.price}</h2>
                    
                      <div class="flex gap-2 mt-2 justify-between">
                      <h2
                        class="flex gap-2 text-sm bg-slate-200  rounded-md p-2 w-full text-gray-500 justify-center items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                          stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                          class="lucide lucide-bed-double h-4 w-4">
                          <path d="M2 20v-8a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v8"></path>
                          <path d="M4 10V6a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4"></path>
                          <path d="M12 4v6"></path>
                          <path d="M2 18h20"></path>
                        </svg>${shop.properties.bedroom}</h2>
                      <h2
                        class="flex gap-2 text-sm bg-slate-200  rounded-md p-2 w-full text-gray-500 justify-center items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                          stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                          class="lucide lucide-bath h-4 w-4">
                          <path
                            d="M9 6 6.5 3.5a1.5 1.5 0 0 0-1-.5C4.683 3 4 3.683 4 4.5V17a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-5">
                          </path>
                          <line x1="10" x2="8" y1="5" y2="7"></line>
                          <line x1="2" x2="22" y1="12" y2="12"></line>
                          <line x1="7" x2="7" y1="19" y2="21"></line>
                          <line x1="17" x2="17" y1="19" y2="21"></line>
                        </svg>${shop.properties.bathroom}</h2>
                      <h2
                        class="flex gap-2 w-full text-sm bg-slate-200  rounded-md p-2 text-gray-500 justify-center items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                          stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                          class="lucide lucide-ruler h-4 w-4">
                          <path
                            d="M21.3 15.3a2.4 2.4 0 0 1 0 3.4l-2.6 2.6a2.4 2.4 0 0 1-3.4 0L2.7 8.7a2.41 2.41 0 0 1 0-3.4l2.6-2.6a2.41 2.41 0 0 1 3.4 0Z">
                          </path>
                          <path d="m14.5 12.5 2-2"></path>
                          <path d="m11.5 9.5 2-2"></path>
                          <path d="m8.5 6.5 2-2"></path>
                          <path d="m17.5 15.5 2-2"></path>
                        </svg>${shop.properties.size}</h2>
                    </div>
                  </div>
                </div>
              </a>
    `
    a.innerHTML+= liToAdd;
    ul.appendChild(a);


 });

}

generateList();
function makePopupContent(shop) {
  return `
  <div class="popupContainer">
          <img src=${shop.properties.img} alt="" />
          <div class="textContainer">
            <A href='/place/${shop.properties.id}'>${shop.properties.name}</Link>
            <span>${shop.properties.bed} bedroom</span>
            <b>$ ${shop.properties.price}</b>
          </div>
        </div>



  `;
}
function onEachFeature(feature, layer) {
    layer.bindPopup(makePopupContent(feature), { closeButton: false, offset: L.point(0, -8) });
}

var myIcon = L.icon({
    iconUrl: '/public/marker.png',
    iconSize: [30, 40]
});

const shopsLayer = L.geoJSON(storeList, {
    onEachFeature: onEachFeature,
    pointToLayer: function(feature, latlng) {
        return L.marker(latlng, { icon: myIcon });
    }
});
shopsLayer.addTo(myMap);

function flyToStore(store) {
    const lat = store.geometry.coordinates[1];
    const lng = store.geometry.coordinates[0];

    myMap.flyTo([lat, lng],
         14, {
        duration: 3
    });
    setTimeout(() => {
        L.popup({closeButton: false, offset: L.point(0, -8)})
        .setLatLng([lat, lng])
        .setContent(makePopupContent(store))
        .openOn(myMap);
    }, 3000);
}







  </script>







<style>
  /* Media Queries */
@media (min-width: 992px) {
    .about .container {
        gap: 50px;
    }

    .container, .hero-form-wrapper {
        max-width: 900px;
    }
}

@media (min-width: 768px) {
    .about .container {
        display: grid;
        grid-template-columns: 0.7fr 1fr;
        align-items: center;
        gap: 30px;
    }

    .container, .hero-form-wrapper {
        max-width: 700px;
    }
}

@media (min-width: 640px) {
    .container {
        max-width: 640px;
        width: 100%;
        margin-inline: auto;
    }
}

@media (min-width: 1200px) {
    .container, .hero-form-wrapper {
        max-width: 1120px;
    }
}

/* General Styles */
.container {
    padding-inline: 15px;
}

</style>